<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>