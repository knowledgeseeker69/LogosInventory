<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FZtzUjF8AAAAAElFTkSuQmCC
</value>
  </data>
</root>